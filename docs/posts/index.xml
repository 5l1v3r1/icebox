<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Thalium Blog</title>
    <link>https://thalium.github.io/icebox/posts/</link>
    <description>Recent content in Posts on Thalium Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2020, all rights reserved.</copyright>
    <lastBuildDate>Fri, 24 Jan 2020 12:00:00 +0100</lastBuildDate>
    
	<atom:link href="https://thalium.github.io/icebox/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Getting Started with Icebox VMI</title>
      <link>https://thalium.github.io/icebox/posts/getting_started/</link>
      <pubDate>Fri, 24 Jan 2020 12:00:00 +0100</pubDate>
      
      <guid>https://thalium.github.io/icebox/posts/getting_started/</guid>
      <description>Icebox is a VMI (Virtual Machine Introspection) framework enabling you to stealthily trace and debug any process system-wide. All Icebox code can be found on our github page.
Try Icebox Icebox now comes with new python bindings allowing fast prototyping on top of VMI, whether you want to trace a user process or inspect the kernel internals.
User-land breakpoints &amp;amp; callstacks example Here&amp;rsquo;s a short example on how to break a user-land windows 10 process on every ntdll!</description>
    </item>
    
  </channel>
</rss>